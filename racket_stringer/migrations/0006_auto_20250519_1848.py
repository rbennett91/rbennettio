# Generated by Django 5.2.1 on 2025-05-19 22:48

import csv
import os

from django.db import migrations


def load_racket_data(apps, schema_editor):
    """
    Load racket data from rackets.csv into the Racket model.
    Skip any records that would violate unique constraints.
    """
    Racket = apps.get_model('racket_stringer', 'Racket')

    # Get the directory of this migration file
    current_dir = os.path.dirname(os.path.abspath(__file__))
    # Get the base directory for the app
    base_dir = os.path.dirname(current_dir)

    # Define path to rackets CSV file
    rackets_file = os.path.join(base_dir, 'initial_data', 'rackets.csv')

    with open(rackets_file, newline='') as csvfile:
        reader = csv.DictReader(csvfile)
        rackets_to_create = [Racket(**row) for row in reader]

        # Bulk create rackets, ignoring any that conflict with existing records
        if rackets_to_create:
            Racket.objects.bulk_create(rackets_to_create, ignore_conflicts=True)


def load_string_data(apps, schema_editor):
    """
    Load string data from strings.csv into the String model.
    Skip any records that would violate unique constraints.
    """
    String = apps.get_model('racket_stringer', 'String')

    # Get the directory of this migration file
    current_dir = os.path.dirname(os.path.abspath(__file__))
    # Get the base directory for the app
    base_dir = os.path.dirname(current_dir)

    # Define path to strings CSV file
    strings_file = os.path.join(base_dir, 'initial_data', 'strings.csv')

    with open(strings_file, newline='') as csvfile:
        reader = csv.DictReader(csvfile)
        strings_to_create = [String(**row) for row in reader]

        # Bulk create strings, ignoring any that conflict with existing records
        if strings_to_create:
            String.objects.bulk_create(strings_to_create, ignore_conflicts=True)


class Migration(migrations.Migration):

    dependencies = [
        ('racket_stringer', '0005_alter_order_racket'),
    ]

    operations = [
        migrations.RunPython(load_racket_data),
        migrations.RunPython(load_string_data),
    ]
